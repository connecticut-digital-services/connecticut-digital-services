{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","IndexPage","a","createElement","title","keywords","className","href","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","func","Layout","gatsby_browser_entry_StaticQuery","Fragment","viewBox","xmlns","id","style","position","zIndex","top","borderWidth","borderColor","borderStyle","right","fill","fillRule","transform","points","d","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-a14bd767df4f76b4c4ba.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <h1 className=\"leading-none text-5xl text-gray-900\">CT Digital Service</h1>\n    <div className=\"leading-normal text-xl text-gray-700\">\n      <p>CT Digital is an open collaborative team with a vision of building and delivering better services for the people of Connecticut. We are passionate about transforming the way government works and bringing human-centered design, data-driven decision making, and an agile performance-orientation to how we work. We aim to radically change how we work to make government work better and provide more meaningful interactions for the people of Connecticut. We believe in working in the open, in listening before doing, and flipping the model of government on its head. Citizens shouldn’t have to understand how government works in order to work with government.</p>\n      <p>We aim to provide a meaningful experience for citizens and businesses that lowers the state’s cost to provide services and reduces time for citizens and businesses to accomplish what they want.</p>\n      <p>If you want to learn more about what we're working on, or to work with us, send us an email <a href=\"mailto:helloctdigital@ct.gov\">helloctdigital@ct.gov</a>.</p>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport \"../css/global.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <svg viewBox='0 0 149 150' xmlns='http://www.w3.org/2000/svg' id='pridecodes-code-corner-svg' style={{ position: 'fixed', zIndex: 9999, top: 0, borderWidth: 0, borderColor: 'black', borderStyle: 'solid', right: 0 }}>\n          <g id='random' fill='none' fillRule='evenodd'>\n            <g id='code-Corner' transform='translate(-1 -75)'>\n              <g id='code' transform='rotate(-45 91.71 37.927)'>\n                <polygon id='Rectangle-2' fill='#D3555C' points='1.35355339 4.26325641e-14 36.7088924 35.3553391 1 35.4123828' />\n                <polygon id='Rectangle-2-Copy' fill='#F48D3A' points='1 35.4123828 36.7067649 35.3553391 72.0599976 70.7106781 1 70.8223826' />\n                <polygon id='Rectangle-2-Copy-2' fill='#FDC753' points='1 70.8247655 72.0642315 70.7106781 106.712464 105.35891 1 106.237148' />\n                <polygon id='Rectangle-2-Copy-3' fill='#70BC53' points='1 106.237148 106.712464 105.35891 69.9429112 142.128463 1 141.649531' />\n                <polygon id='Rectangle-2-Copy-4' fill='#249CD5' points='1 141.649531 70.6500179 141.421356 34.5875721 177.483802 1 177.061914' />\n                <polygon id='Rectangle-2-Copy-5' fill='#9D61A4' points='1 177.061914 35.2946789 176.776695 0.646446609 211.424928' />\n              </g>\n              <path d='M88.263135,101.933356 L88.263135,114.80691 L82.5586862,114.80691 L82.5586862,96.2289077 L101.136688,96.2289077 L101.175232,101.894813 L94.6228245,101.894813 L88.263135,101.933356 Z M124.879897,108.666002 L129.505126,113.29123 L89.9208764,130.134772 L85.2956476,125.509543 L124.879897,108.666002 Z M124.145428,137.815649 L124.183971,131.45596 L124.183971,124.903552 L129.849877,124.942096 L129.849877,143.520098 L111.271874,143.520098 L111.271874,137.815649 L124.145428,137.815649 Z'\n              id='Overlay' fill='#FFF' fillRule='nonzero' />\n            </g>\n          </g>\n        </svg>\n        <div className=\"max-w-2xl mx-auto font-sans\">\n          <div className=\"px-4\">\n            <main>{children}</main>\n          </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}